<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context-3.0.xsd 
						http://www.springframework.org/schema/aop
						http://www.springframework.org/schema/aop/spring-aop-3.0.xsd 
						http://www.springframework.org/schema/tx
						http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
						http://www.springframework.org/schema/mvc
						http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">
	<!-- 配置自动扫描包 -->
	<context:component-scan base-package="com.com" />
	<!-- 配置数据源 -->
	<context:property-placeholder location="classpath:database.properties" />
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
		<property name="driverClassName">
			<value>${driverClassName}</value>
		</property>
		<property name="url">
			<value>${url}</value>
		</property>
		<property name="username">
			<value>${username}</value>
		</property>
		<property name="password">
			<value>${password}</value>
		</property>
		<property name="maxActive">
			<value>10</value>
		</property>
		<property name="maxIdle">
			<value>5</value>
		</property>
		<property name="maxWait">
			<value>3000</value>
		</property>
		<!-- 空闲链接检查30分鐘检查一次 -->
		<property name="minEvictableIdleTimeMillis" value="18000000" />
		<property name="removeAbandoned" value="true" />
		<property name="removeAbandonedTimeout" value="180" />
		<!-- 从数据库连接池中取得连接时，对其的有效性进行检查。 -->
		<property name="testOnBorrow" value="true" />
	</bean>
	<!-- 创建sessionFactory对象 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:config/sql-config/sql-cfg.xml" />
	</bean>
	<!-- 开启事务管理器 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 开启事物管理器自动注入 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory" />
	</bean>
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.com.service.dao" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
    </bean>
	<!-- 配置切面 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>
	<!-- spring 文件上传配置 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize">
			<value>1048576000</value>
		</property>
		<property name="maxInMemorySize">
			<value>4096</value>
		</property>
		<property name="defaultEncoding">
			<value>UTF-8</value>
		</property>
	</bean>
	<!-- 密码转换定义 -->
	<bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" />
	
	<!-- 工作流配置开始 -->
	<!-- 工作流 spring mvc集成配置  -->
  	<!-- activiti5集成spring配置,此为切入点，id不能改名，额外需要jackson相关包3个， 需要的架包参考用户手册集成说明内的，不要盲目的加入war示例内的所有jar -->
	<bean id="processEngineConfiguration" class="org.activiti.spring.SpringProcessEngineConfiguration">
		<!-- 配置的是ProcessEngineConfiguration.java类的属性 -->
		<property name="dataSource" ref="dataSource" />
		<property name="transactionManager" ref="transactionManager" />
		<property name="databaseSchemaUpdate" value="false" /><!-- 此处通常应该为false -->
		<property name="jobExecutorActivate" value="false" />
		<property name="history" value="none" />
		<property name="dbIdentityUsed" value="false" />
		<property name="dbHistoryUsed" value="false" /><!-- 不检测历史表是否存在,应对Activiti database problem: Tables missing for component(s) history, identity -->
		<!-- <property name="createDiagramOnDeploy" value="false" />发布时是否包括流程图片png-->
		<property name="activityFontName" value="宋体"/><!-- 避免发布的图片和xml遇到中文时乱码 -->
   		<property name="labelFontName" value="宋体"/>
   		<property name="xmlEncoding" value="utf8"/><!-- 解析xml流程文件所使用的字符集，默认为utf8，依据数据库来 -->
	</bean>
  	<!-- 引擎实例，通常就是用到它 -->
	<bean id="processEngine" class="org.activiti.spring.ProcessEngineFactoryBean">
		<property name="processEngineConfiguration" ref="processEngineConfiguration" />
	</bean>
  	<!-- activiti流程的辅助类，仅后台发布和重绑流程用到 -->
	<!-- <bean id="actDeploy" class="cn.xxxxx.activiti.ActDeploy" /> -->
  	<!-- 创建activiti提供的各种服务 -->
	<!-- 工作流仓储服务 -->
	<bean id="repositoryService" factory-bean="processEngine" factory-method="getRepositoryService" />
	<!-- 工作流运行服务 -->
	<bean id="runtimeService" factory-bean="processEngine" factory-method="getRuntimeService" />
	<!-- 工作流任务服务 -->
	<bean id="taskService" factory-bean="processEngine" factory-method="getTaskService" />
	<!-- 工作流历史数据服务 -->
	<bean id="historyService" factory-bean="processEngine" factory-method="getHistoryService" />
	<!-- 工作流管理服务 -->
	<bean id="managementService" factory-bean="processEngine" factory-method="getManagementService" />
	<!-- 工作流唯一服务 -->
	<bean id="IdentityService" factory-bean="processEngine" factory-method="getIdentityService" />
	<!-- 工作流配置结束 -->
</beans>